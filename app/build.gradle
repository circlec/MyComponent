apply plugin: 'com.android.application'
//android配置
def config = rootProject.ext.android
//support相关库依赖
def supportLib = rootProject.ext.supportDependencies
//其他相关库依赖
def otherLib = rootProject.ext.otherDependencies

android {
    compileSdkVersion config.compileSdkVersion
    defaultConfig {
        applicationId "zc.mycomponent"
        minSdkVersion config.minSdkVersion
        targetSdkVersion config.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [ AROUTER_MODULE_NAME : project.getName() ]
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    //防止资源名重复
    resourcePrefix "app_"

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation supportLib.supportAppcompat
    implementation supportLib.constraintLayout
    implementation supportLib.suppoutDesign
    testImplementation otherLib.junit
    //noinspection GradleCompatible
    androidTestImplementation supportLib.suppoutTestRunner
    androidTestImplementation supportLib.suppoutTestEspresso

    implementation otherLib.arouterApi
    annotationProcessor otherLib.arouterAnnotationProcessor

    implementation project(':commonlib')

    if (rootProject.ext.isNeedAllModule) {
        implementation project(':account')
        implementation project(':setting')
    }

}
