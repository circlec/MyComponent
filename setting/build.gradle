if (!rootProject.ext.isNeedAllModule) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
//android配置
def config = rootProject.ext.android

//相关库依赖
def supportLib = rootProject.ext.supportDependencies
//其他相关库依赖
def otherLib = rootProject.ext.otherDependencies

android {
    compileSdkVersion config.compileSdkVersion
    defaultConfig {
        minSdkVersion config.minSdkVersion
        targetSdkVersion config.targetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        lintOptions { abortOnError false }
    }
    resourcePrefix "setting_"

    sourceSets {
        main {
            //控制两种模式下的资源和代码配置情况
            if (!rootProject.ext.isNeedAllModule) {
                manifest.srcFile 'src/main/AndroidManifest.xml'
            } else {

                manifest.srcFile 'src/main/setting/AndroidManifest.xml'
                //集成开发模式下排除debug文件夹中的所有Java文件
                java {
                    exclude 'debug/**'
                }
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}
kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}
dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation supportLib.supportAppcompat
    implementation supportLib.constraintLayout
    implementation supportLib.suppoutDesign
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation otherLib.junit
    //noinspection GradleCompatible
    androidTestImplementation supportLib.suppoutTestRunner
    androidTestImplementation supportLib.suppoutTestEspresso

    implementation otherLib.arouterApi
    annotationProcessor otherLib.arouterAnnotationProcessor
    kapt otherLib.arouterAnnotationProcessor
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation project(":commonlib")

}
